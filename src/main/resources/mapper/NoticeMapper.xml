<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campus.dao.NoticeDao">
    
    <!-- 结果映射 -->
    <resultMap id="NoticeMap" type="com.campus.entity.Notice">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="type" property="type" jdbcType="VARCHAR"/>
        <result column="publisher_id" property="publisherId" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    
    <!-- 通用查询字段 -->
    <sql id="Base_Column_List">
        id, title, content, type, status, create_time, update_time
    </sql>
    
    <!-- 根据ID查询通知 -->
    <select id="selectNoticeById" resultMap="NoticeMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_notice
        WHERE id = #{id}
    </select>
    
    <!-- 获取所有通知 -->
    <select id="selectAllNotices" resultMap="NoticeMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_notice
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据类型查询通知 -->
    <select id="selectNoticesByType" resultMap="NoticeMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_notice
        WHERE type = #{type}
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据状态查询通知 -->
    <select id="selectNoticesByStatus" resultMap="NoticeMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_notice
        WHERE status = #{status}
        ORDER BY create_time DESC
    </select>
    
    <!-- 获取最近的通知 -->
    <select id="selectRecentNotices" resultMap="NoticeMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_notice
        WHERE status = 1 <!-- 已发布状态 -->
        ORDER BY create_time DESC
        LIMIT #{limit}
    </select>
    
    <!-- 获取置顶通知 -->
    <select id="selectTopNotices" resultMap="NoticeMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_notice
        WHERE is_top = 1 AND status = 1 <!-- 置顶且已发布 -->
        ORDER BY create_time DESC
    </select>
    
    <!-- 根据发布者ID查询通知 -->
    <select id="selectNoticesByPublisherId" resultMap="NoticeMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_notice
        WHERE publisher_id = #{publisherId}
        ORDER BY create_time DESC
    </select>
    
    <!-- 插入通知 -->
    <insert id="insertNotice" parameterType="com.campus.entity.Notice" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_notice (
            title, content, type, status, is_top, view_count,
            publisher_id, publisher_name, create_time, update_time
        ) VALUES (
            #{title}, #{content}, #{type}, #{status}, #{isTop}, #{viewCount},
            #{publisherId}, #{publisherName}, #{createTime}, #{updateTime}
        )
    </insert>
    
    <!-- 更新通知 -->
    <update id="updateNotice" parameterType="com.campus.entity.Notice">
        UPDATE t_notice
        <set>
            <if test="title != null">title = #{title},</if>
            <if test="content != null">content = #{content},</if>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status = #{status},</if>
            <if test="isTop != null">is_top = #{isTop},</if>
            <if test="publisherId != null">publisher_id = #{publisherId},</if>
            <if test="publisherName != null">publisher_name = #{publisherName},</if>
            update_time = #{updateTime}
        </set>
        WHERE id = #{id}
    </update>
    
    <!-- 更新通知状态 -->
    <update id="updateNoticeStatus">
        UPDATE t_notice
        SET status = #{status}, update_time = NOW()
        WHERE id = #{id}
    </update>
    
    <!-- 更新阅读次数 -->
    <update id="incrementViewCount">
        UPDATE t_notice
        SET view_count = view_count + 1
        WHERE id = #{id}
    </update>
    
    <!-- 删除通知 -->
    <delete id="deleteNotice">
        DELETE FROM t_notice
        WHERE id = #{id}
    </delete>
    
    <!-- 批量删除通知 -->
    <delete id="batchDeleteNotices">
        DELETE FROM t_notice
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper> 