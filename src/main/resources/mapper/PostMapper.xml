<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campus.dao.PostDao">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.campus.entity.Post">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="title" property="title" jdbcType="VARCHAR"/>
        <result column="content" property="content" jdbcType="LONGVARCHAR"/>
        <result column="author_id" property="authorId" jdbcType="BIGINT"/>
        <result column="forum_type" property="forumType" jdbcType="VARCHAR"/>
        <result column="forum_color" property="forumColor" jdbcType="VARCHAR"/>
        <result column="tags" property="tags"
                typeHandler="com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler"/>
        <result column="view_count" property="viewCount" jdbcType="INTEGER"/>
        <result column="like_count" property="likeCount" jdbcType="INTEGER"/>
        <result column="comment_count" property="commentCount" jdbcType="INTEGER"/>
        <result column="is_top" property="isTop" jdbcType="TINYINT"/>
        <result column="is_essence" property="isEssence" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <association property="author" javaType="com.campus.entity.User">
            <id column="u_id" property="id"/>
            <result column="username" property="username"/>
            <result column="real_name" property="realName"/>
            <result column="avatar" property="avatar"/>
        </association>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        p.id, p.title, p.content, p.author_id, p.forum_type, p.forum_color, p.tags,
        p.view_count, p.like_count, p.comment_count, p.is_top, p.is_essence, p.status, 
        p.create_time, p.update_time
    </sql>

    <!-- 获取所有帖子（分页） -->
    <select id="getAllPosts" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>,
        u.id as u_id, u.username, u.real_name, u.avatar
        FROM post p
        LEFT JOIN user u ON p.author_id = u.id
        <where>
            <if test="status != null">
                AND p.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="forumType != null">
                AND p.forum_type = #{forumType,jdbcType=VARCHAR}
            </if>
        </where>
        ORDER BY p.create_time DESC
        <if test="offset != null and limit != null">
            limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 获取帖子总数 -->
    <select id="getPostCount" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM post p
        <where>
            <if test="status != null">
                AND p.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="forumType != null">
                AND p.forum_type = #{forumType,jdbcType=VARCHAR}
            </if>
            <if test="tag != null">
                AND JSON_CONTAINS(p.tags, JSON_ARRAY(#{tag}))
            </if>
        </where>
    </select>

    <!-- 根据ID获取帖子 -->
    <select id="getPostById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>,
        u.id as u_id, u.username, u.real_name, u.avatar
        FROM post p
        LEFT JOIN user u ON p.author_id = u.id
        WHERE p.id = #{id,jdbcType=BIGINT}
    </select>

    <!-- 根据作者ID获取帖子（分页） -->
    <select id="getPostsByAuthorId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>,
        u.id as u_id, u.username, u.real_name, u.avatar
        FROM post p
        LEFT JOIN user u ON p.author_id = u.id
        WHERE p.author_id = #{authorId,jdbcType=BIGINT}
        <if test="status != null">
            AND p.status = #{status,jdbcType=TINYINT}
        </if>
        ORDER BY p.create_time DESC
        <if test="offset != null and limit != null">
            limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 根据论坛类型获取帖子（分页） -->
    <select id="getPostsByForumType" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>,
        u.id as u_id, u.username, u.real_name, u.avatar
        FROM post p
        LEFT JOIN user u ON p.author_id = u.id
        WHERE p.forum_type = #{forumType,jdbcType=VARCHAR}
        <if test="status != null">
            AND p.status = #{status,jdbcType=TINYINT}
        </if>
        ORDER BY p.create_time DESC
    </select>

    <!-- 根据标签获取帖子 -->
    <select id="getPostsByTag" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>,
        u.id as u_id, u.username, u.real_name, u.avatar
        FROM post p
        LEFT JOIN user u ON p.author_id = u.id
        WHERE JSON_CONTAINS(p.tags, JSON_ARRAY(#{tag}))
        <if test="status != null">
            AND p.status = #{status,jdbcType=TINYINT}
        </if>
        ORDER BY p.create_time DESC
        <if test="offset != null and limit != null">
            limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 获取热门帖子 -->
    <select id="getHotPosts" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>,
        u.id as u_id, u.username, u.real_name, u.avatar
        FROM post p
        LEFT JOIN user u ON p.author_id = u.id
        WHERE p.status = 1
        <if test="forumType != null">
            AND p.forum_type = #{forumType,jdbcType=VARCHAR}
        </if>
        <if test="tag != null">
            AND JSON_CONTAINS(p.tags, JSON_ARRAY(#{tag}))
        </if>
        ORDER BY (p.view_count * 0.3 + p.like_count * 0.4 + p.comment_count * 0.3) DESC
        limit #{limit,jdbcType=INTEGER}
    </select>

    <!-- 搜索帖子（分页） -->
    <select id="searchPosts" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>,
        u.id as u_id, u.username, u.real_name, u.avatar
        FROM post p
        LEFT JOIN user u ON p.author_id = u.id
        <where>
            <if test="keyword != null and keyword != ''">
                AND (
                    p.title LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                    OR p.content LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                OR u.username LIKE CONCAT('%', #{keyword,jdbcType=VARCHAR}, '%')
                )
            </if>
            <if test="status != null">
                AND p.status = #{status,jdbcType=TINYINT}
            </if>
            <if test="forumType != null">
                AND p.forum_type = #{forumType,jdbcType=VARCHAR}
            </if>
            <if test="tag != null">
                AND JSON_CONTAINS(p.tags, JSON_ARRAY(#{tag}))
            </if>
        </where>
        ORDER BY p.create_time DESC
        <if test="offset != null and limit != null">
            limit #{offset,jdbcType=INTEGER}, #{limit,jdbcType=INTEGER}
        </if>
    </select>

    <!-- 添加帖子 -->
    <insert id="addPost" parameterType="com.campus.entity.Post" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO post (title, content, author_id, forum_type, forum_color, tags,
                          view_count, like_count, comment_count, is_top, is_essence, status,
                          create_time, update_time
        )
        VALUES (#{title,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, #{authorId,jdbcType=BIGINT},
                #{forumType,jdbcType=VARCHAR}, #{forumColor,jdbcType=VARCHAR},
                #{tags,typeHandler=com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler},
                #{viewCount,jdbcType=INTEGER}, #{likeCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER},
                #{isTop,jdbcType=TINYINT}, #{isEssence,jdbcType=TINYINT}, #{status,jdbcType=TINYINT},
                NOW(), NOW()
        )
    </insert>

    <!-- 更新帖子 -->
    <update id="updatePost" parameterType="com.campus.entity.Post">
        UPDATE post
        SET
            title = #{title,jdbcType=VARCHAR},
            content = #{content,jdbcType=LONGVARCHAR},
            forum_type  = #{forumType,jdbcType=VARCHAR},
            forum_color = #{forumColor,jdbcType=VARCHAR},
            tags        = #{tags,typeHandler=com.baomidou.mybatisplus.extension.handlers.JacksonTypeHandler},
            status      = #{status,jdbcType=TINYINT},
            update_time = NOW()
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 获取热门标签 -->
    <select id="getHotTags" resultType="java.lang.String">
        SELECT tag, COUNT(*) AS count
        FROM (SELECT JSON_UNQUOTE(tags_element) AS tag
              FROM post p,
                   JSON_TABLE(
                           p.tags,
                           '$[*]' COLUMNS (tags_element VARCHAR(50) PATH '$')
                   ) AS tj
              WHERE p.status = 1) t
        GROUP BY tag
        ORDER BY count DESC
        limit #{limit, jdbcType=INTEGER}
    </select>
</mapper>