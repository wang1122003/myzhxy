<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campus.dao.ScheduleDao">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.campus.entity.Schedule">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="course_id" property="courseId" jdbcType="BIGINT"/>
        <result column="term_info" property="termInfo" jdbcType="VARCHAR"/>
        <result column="teacher_id" property="teacherId" jdbcType="BIGINT"/>
        <result column="classroom_id" property="classroomId" jdbcType="BIGINT"/>
        <result column="day_of_week" property="dayOfWeek" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="TIME"/>
        <result column="end_time" property="endTime" jdbcType="TIME"/>
        <result column="start_week" property="startWeek" jdbcType="INTEGER"/>
        <result column="end_week" property="endWeek" jdbcType="INTEGER"/>
        <result column="week_parity" property="weekParity" jdbcType="TINYINT"/>
        <result column="status" property="status" jdbcType="TINYINT"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="course_name" property="courseName" jdbcType="VARCHAR"/>
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
        <result column="classroom_name" property="classroomName" jdbcType="VARCHAR"/>
        <result column="building" property="classroomBuilding" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        s.id, s.course_id, s.term_info, s.teacher_id, s.classroom_id, s.day_of_week,
        s.start_time, s.end_time, s.start_week, s.end_week, s.week_parity,
        s.status, s.create_time, s.update_time
    </sql>

    <!-- 关联查询结果列 -->
    <sql id="Columns_With_Details">
        <include refid="Base_Column_List"/>,
        c.course_name as course_name,
        u.real_name as teacher_name,
        cr.name as classroom_name,
        cr.building as building
    </sql>

    <!-- 查询所有课程表 -->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        LEFT JOIN term tm ON s.term_id = tm.id
        LEFT JOIN clazz cl ON s.class_id = cl.id
        ORDER BY s.term_id DESC, s.week_day, s.start_time
    </select>

    <!-- 分页查询课程表 -->
    <select id="findByPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Columns_With_Details"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        ORDER BY s.term_info DESC, s.day_of_week, s.start_time
        limit #{offset}, #{limit}
    </select>

    <!-- 获取课程表总数 -->
    <select id="getCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
    </select>

    <!-- 根据时间段查询课程表 -->
    <select id="findByTimeSlot" resultMap="BaseResultMap">
        SELECT
        <include refid="Columns_With_Details"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        WHERE s.day_of_week = #{dayOfWeek}
        AND s.start_time = #{startTime} AND s.end_time = #{endTime}
        ORDER BY s.term_info DESC
    </select>

    <!-- 检查教师时间冲突 -->
    <select id="checkTeacherTimeConflict" resultType="java.lang.Boolean">
        SELECT EXISTS (
            SELECT 1 FROM schedule
            WHERE teacher_id = #{teacherId}
        AND day_of_week = #{dayOfWeek}
        AND term_info = #{termInfo}
        AND start_week &lt;= #{endWeek} AND end_week >= #{startWeek}
            AND (
        (start_time
        &lt;
        #{endTime} AND end_time &gt; #{startTime})
            )
        <if test="id != null">
            AND id != #{id}
        </if>
        )
    </select>

    <!-- 检查教室时间冲突 -->
    <select id="checkClassroomTimeConflict" resultType="java.lang.Boolean">
        SELECT EXISTS (
            SELECT 1 FROM schedule
        WHERE classroom_id = #{classroomId}
        AND day_of_week = #{dayOfWeek}
        AND term_info = #{termInfo}
        AND start_week &lt;= #{endWeek} AND end_week >= #{startWeek}
            AND (
        (start_time
        &lt;
        #{endTime} AND end_time &gt; #{startTime})
            )
        <if test="id != null">
            AND id != #{id}
        </if>
        )
    </select>

    <!-- 获取教师课程数统计 -->
    <select id="getTeacherScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE teacher_id = #{teacherId}
    </select>

    <!-- 获取教室课程数统计 -->
    <select id="getClassroomScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE classroom_id = #{classroomId}
    </select>

    <!-- 获取课程课程数统计 -->
    <select id="getCourseScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE course_id = #{courseId}
    </select>

    <!-- 获取学期课程数统计 -->
    <select id="getTermScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE term_info = #{termInfo}
    </select>

    <!-- 获取教师课程时间分布统计 -->
    <select id="getTeacherScheduleTimeDistribution" resultType="java.util.Map">
        SELECT s.day_of_week,
            COUNT(*) as schedule_count,
               GROUP_CONCAT(DISTINCT c.course_name) as courses
        FROM schedule s
                 JOIN course c on s.course_id = c.id
        WHERE s.teacher_id = #{teacherId}
          AND s.term_info = #{termInfo}
        GROUP BY s.day_of_week
        ORDER BY s.day_of_week
    </select>

    <!-- 获取教室课程时间分布统计 -->
    <select id="getClassroomScheduleTimeDistribution" resultType="java.util.Map">
        SELECT s.day_of_week,
            COUNT(*) as schedule_count,
               GROUP_CONCAT(DISTINCT c.course_name) as courses
        FROM schedule s
                 JOIN course c on s.course_id = c.id
        WHERE s.classroom_id = #{classroomId}
          AND s.term_info = #{termInfo}
        GROUP BY s.day_of_week
        ORDER BY s.day_of_week
    </select>

    <!-- 更新课程表状态 -->
    <update id="updateStatus">
        UPDATE schedule
        SET status = #{status, jdbcType=TINYINT},
            update_time = NOW()
        WHERE id = #{id, jdbcType=BIGINT}
    </update>

    <!-- 根据教室ID统计课表数量 -->
    <select id="countByClassroomId" resultType="long">
        SELECT COUNT(*)
        FROM schedule
        WHERE classroom_id = #{classroomId}
    </select>

    <!-- 根据教师ID和学期查询课表 -->
    <select id="findByTeacherIdAndTerm" resultMap="BaseResultMap">
        SELECT
        <include refid="Columns_With_Details"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        WHERE s.teacher_id = #{teacherId} AND s.term_info = #{termInfo}
        ORDER BY s.day_of_week, s.start_time
    </select>

    <!-- 根据课程ID统计课表数量 -->
    <select id="countByCourseId" resultType="long">
        SELECT COUNT(*)
        FROM schedule
        WHERE course_id = #{courseId}
    </select>

    <!-- 查找给定课程ID列表中已被排课的课程ID -->
    <select id="findScheduledCourseIds" resultType="long">
        SELECT DISTINCT course_id
        FROM schedule
        WHERE course_id IN
        <foreach item="item" collection="courseIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 根据学生用户ID查询课程表 -->
    <select id="findByUserId" resultMap="BaseResultMap">
        SELECT s.*,
               c.course_name as courseName,
               u.real_name   as teacherName,
               cr.name       as classroomName,
               cr.building   as classroomBuilding
        FROM schedule s
                 JOIN course_selection cs ON s.course_id = cs.course_id AND s.term_info = cs.term_info
                 LEFT JOIN course c ON s.course_id = c.id
                 LEFT JOIN user u ON s.teacher_id = u.id
                 LEFT JOIN classroom cr ON s.classroom_id = cr.id
        WHERE cs.user_id = #{userId}
          AND cs.status = 1
          AND s.status = 1
        ORDER BY s.day_of_week, s.start_time
    </select>

    <!-- 添加排课 -->
    <insert id="insert" parameterType="com.campus.entity.Schedule" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO schedule (course_id, term_info, teacher_id, classroom_id, day_of_week, start_time, end_time,
                              start_week, end_week, week_parity, status, create_time, update_time)
        VALUES (#{courseId,jdbcType=BIGINT}, #{termInfo,jdbcType=VARCHAR}, #{teacherId,jdbcType=BIGINT},
                #{classroomId,jdbcType=BIGINT}, #{dayOfWeek,jdbcType=INTEGER},
                #{startTime,jdbcType=TIME}, #{endTime,jdbcType=TIME}, #{startWeek,jdbcType=INTEGER},
                #{endWeek,jdbcType=INTEGER}, #{weekParity,jdbcType=TINYINT},
                #{status,jdbcType=TINYINT}, NOW(), NOW())
    </insert>

    <!-- 更新排课 -->
    <update id="update" parameterType="com.campus.entity.Schedule">
        UPDATE schedule
        <set>
            <if test="courseId != null">course_id = #{courseId,jdbcType=BIGINT},</if>
            <if test="termInfo != null">term_info = #{termInfo,jdbcType=VARCHAR},</if>
            <if test="teacherId != null">teacher_id = #{teacherId,jdbcType=BIGINT},</if>
            <if test="classroomId != null">classroom_id = #{classroomId,jdbcType=BIGINT},</if>
            <if test="dayOfWeek != null">day_of_week = #{dayOfWeek,jdbcType=INTEGER},</if>
            <if test="startTime != null">start_time = #{startTime,jdbcType=TIME},</if>
            <if test="endTime != null">end_time = #{endTime,jdbcType=TIME},</if>
            <if test="startWeek != null">start_week = #{startWeek,jdbcType=INTEGER},</if>
            <if test="endWeek != null">end_week = #{endWeek,jdbcType=INTEGER},</if>
            <if test="weekParity != null">week_parity = #{weekParity,jdbcType=TINYINT},</if>
            <if test="status != null">status = #{status,jdbcType=TINYINT},</if>
            update_time = NOW()
        </set>
        WHERE id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 删除排课 -->
    <delete id="delete" parameterType="java.lang.Long">
        DELETE
        FROM schedule
        WHERE id = #{id,jdbcType=BIGINT}
    </delete>

    <!-- 根据ID查询排课 -->
    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
    <include refid="Columns_With_Details"/>
    FROM schedule s
    LEFT JOIN course c ON s.course_id = c.id
    LEFT JOIN user u ON s.teacher_id = u.id
    LEFT JOIN classroom cr ON s.classroom_id = cr.id
        WHERE s.id = #{id}
    </select>

    <!-- 根据课程ID列表和学期信息查询课表记录 -->
    <select id="findSchedulesByCourseIdsAndTerm" resultMap="BaseResultMap">
        SELECT
        <include refid="Columns_With_Details"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        WHERE s.term_info = #{termInfo}
        AND s.course_id IN
        <foreach item="item" index="index" collection="courseIds" open="(" separator="," close=")">
            #{item}
        </foreach>
        AND s.status = 1 -- 通常只查询状态正常的排课
        ORDER BY s.day_of_week, s.start_time
    </select>

    <!-- 检查教师时间冲突 -->
    <select id="countTeacherTimeConflict" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM schedule
        WHERE teacher_id = #{teacherId, jdbcType=BIGINT}
        AND day_of_week = #{dayOfWeek, jdbcType=INTEGER}
        AND term_info = #{termInfo, jdbcType=VARCHAR}
        AND start_week &lt;= #{endWeek, jdbcType=INTEGER} AND end_week >= #{startWeek, jdbcType=INTEGER}
        AND (
        (start_time &lt; #{endTime, jdbcType=TIME} AND end_time > #{startTime, jdbcType=TIME})
        )
        <if test="id != null">
            AND id != #{id, jdbcType=BIGINT}
        </if>
    </select>

    <!-- 检查教室时间冲突 -->
    <select id="countClassroomTimeConflict" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM schedule
        WHERE classroom_id = #{classroomId, jdbcType=BIGINT}
        AND day_of_week = #{dayOfWeek, jdbcType=INTEGER}
        AND term_info = #{termInfo, jdbcType=VARCHAR}
        AND start_week &lt;= #{endWeek, jdbcType=INTEGER} AND end_week >= #{startWeek, jdbcType=INTEGER}
        AND (
        (start_time &lt; #{endTime, jdbcType=TIME} AND end_time > #{startTime, jdbcType=TIME})
        )
        <if test="id != null">
            AND id != #{id, jdbcType=BIGINT}
        </if>
    </select>
</mapper> 