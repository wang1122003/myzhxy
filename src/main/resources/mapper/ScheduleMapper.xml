<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.campus.dao.ScheduleDao">
    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.campus.entity.Schedule">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="course_id" property="courseId" jdbcType="INTEGER"/>
        <result column="course_name" property="courseName" jdbcType="VARCHAR"/>
        <result column="teacher_id" property="teacherId" jdbcType="INTEGER"/>
        <result column="teacher_name" property="teacherName" jdbcType="VARCHAR"/>
        <result column="classroom_id" property="classroomId" jdbcType="INTEGER"/>
        <result column="classroom_name" property="classroomName" jdbcType="VARCHAR"/>
        <result column="week_day" property="weekDay" jdbcType="INTEGER"/>
        <result column="start_time" property="startTime" jdbcType="TIME"/>
        <result column="end_time" property="endTime" jdbcType="TIME"/>
        <result column="start_week" property="startWeek" jdbcType="INTEGER"/>
        <result column="end_week" property="endWeek" jdbcType="INTEGER"/>
        <result column="term_id" property="termId" jdbcType="BIGINT"/>
        <result column="term_name" property="termName" jdbcType="VARCHAR"/>
        <result column="class_id" property="classId" jdbcType="BIGINT"/>
        <result column="class_name" property="className" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        s.id, s.course_id, c.course_name as course_name, s.teacher_id, u.real_name as teacher_name,
        s.classroom_id, cr.name as classroom_name, s.week_day, s.start_time, s.end_time,
        s.start_week, s.end_week, s.term_id, tm.term_name as term_name, s.class_id, cl.name as class_name,
        s.status, s.create_time, s.update_time
    </sql>

    <!-- 查询所有课程表 -->
    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        LEFT JOIN term tm ON s.term_id = tm.id
        LEFT JOIN clazz cl ON s.class_id = cl.id
        ORDER BY s.term_id DESC, s.week_day, s.start_time
    </select>

    <!-- 分页查询课程表 -->
    <select id="findByPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        LEFT JOIN term tm ON s.term_id = tm.id
        LEFT JOIN clazz cl ON s.class_id = cl.id
        ORDER BY s.term_id DESC, s.week_day, s.start_time
        limit #{offset}, #{limit}
    </select>

    <!-- 获取课程表总数 -->
    <select id="getCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
    </select>

    <!-- 根据时间段查询课程表 -->
    <select id="findByTimeSlot" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        LEFT JOIN term tm ON s.term_id = tm.id
        LEFT JOIN clazz cl ON s.class_id = cl.id
        WHERE s.week_day = #{weekDay}
        AND s.start_time = #{timeSlot}
        ORDER BY s.term_id DESC
    </select>

    <!-- 检查教师时间冲突 -->
    <select id="checkTeacherTimeConflict" resultType="java.lang.Boolean">
        SELECT EXISTS (
            SELECT 1 FROM schedule
            WHERE teacher_id = #{teacherId}
            AND week_day = #{weekDay}
            AND (
                (start_time &lt;= #{startTime} AND end_time &gt;= #{startTime})
                OR (start_time &lt;= #{endTime} AND end_time &gt;= #{endTime})
                OR (start_time &gt;= #{startTime} AND end_time &lt;= #{endTime})
            )
        )
    </select>

    <!-- 检查班级时间冲突 -->
    <select id="checkClassTimeConflict" resultType="java.lang.Boolean">
        SELECT EXISTS (
            SELECT 1 FROM schedule
            WHERE class_id = #{classId}
            AND week_day = #{weekDay}
            AND (
                (start_time &lt;= #{startTime} AND end_time &gt;= #{startTime})
                OR (start_time &lt;= #{endTime} AND end_time &gt;= #{endTime})
                OR (start_time &gt;= #{startTime} AND end_time &lt;= #{endTime})
            )
        )
    </select>

    <!-- 获取教师课程数统计 -->
    <select id="getTeacherScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE teacher_id = #{teacherId}
    </select>

    <!-- 获取班级课程数统计 -->
    <select id="getClassScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE class_id = #{classId}
    </select>

    <!-- 获取教室课程数统计 -->
    <select id="getClassroomScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE classroom_id = #{classroomId}
    </select>

    <!-- 获取课程课程数统计 -->
    <select id="getCourseScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE course_id = #{courseId}
    </select>

    <!-- 获取学期课程数统计 -->
    <select id="getTermScheduleCount" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM schedule
        WHERE term_id = #{termId}
    </select>

    <!-- 获取教师课程时间分布统计 -->
    <select id="getTeacherScheduleTimeDistribution" resultType="java.util.Map">
        SELECT 
            week_day,
            COUNT(*) as schedule_count,
            GROUP_CONCAT(DISTINCT course_name) as courses
        FROM schedule
        WHERE teacher_id = #{teacherId}
        GROUP BY week_day
        ORDER BY week_day
    </select>

    <!-- 获取班级课程时间分布统计 -->
    <select id="getClassScheduleTimeDistribution" resultType="java.util.Map">
        SELECT 
            week_day,
            COUNT(*) as schedule_count,
            GROUP_CONCAT(DISTINCT course_name) as courses
        FROM schedule
        WHERE class_id = #{classId}
        GROUP BY week_day
        ORDER BY week_day
    </select>

    <!-- 获取教室课程时间分布统计 -->
    <select id="getClassroomScheduleTimeDistribution" resultType="java.util.Map">
        SELECT 
            week_day,
            COUNT(*) as schedule_count,
            GROUP_CONCAT(DISTINCT course_name) as courses
        FROM schedule
        WHERE classroom_id = #{classroomId}
        GROUP BY week_day
        ORDER BY week_day
    </select>

    <!-- 更新课程表状态 -->
    <update id="updateStatus">
        UPDATE schedule
        SET status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <!-- 根据教室ID统计课表数量 -->
    <select id="countByClassroomId" resultType="long">
        SELECT COUNT(*)
        FROM schedule
        WHERE classroom_id = #{classroomId}
    </select>

    <!-- 根据教师ID和学期查询课表 -->
    <select id="findByTeacherIdAndTerm" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM schedule s
        LEFT JOIN course c ON s.course_id = c.id
        LEFT JOIN user u ON s.teacher_id = u.id
        LEFT JOIN classroom cr ON s.classroom_id = cr.id
        LEFT JOIN term tm ON s.term_id = tm.id
        LEFT JOIN clazz cl ON s.class_id = cl.id
        WHERE s.teacher_id = #{teacherId} AND s.term_id = #{termId}
    </select>

    <!-- 根据课程ID统计课表数量 -->
    <select id="countByCourseId" resultType="long">
        SELECT COUNT(*)
        FROM schedule
        WHERE course_id = #{courseId}
    </select>

    <!-- 查找给定课程ID列表中已被排课的课程ID -->
    <select id="findScheduledCourseIdsInList" resultType="long">
        SELECT DISTINCT course_id
        FROM schedule
        WHERE course_id IN
        <foreach item="item" collection="courseIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <!-- 根据学生ID查询其所有课表安排 -->
    <select id="findByStudentId" resultType="com.campus.entity.Schedule">
        SELECT s.*
        FROM schedule s
                 JOIN course_selection cs ON s.course_id = cs.course_id
        WHERE cs.student_id = (
            -- 假设 studentId 参数是 user 表的 ID, 需要通过 student 表关联
            SELECT st.id
            FROM student st
            WHERE st.user_id = #{studentId})
        -- 可以添加排序，例如按星期、开始时间
        ORDER BY s.week_day ASC, s.start_time ASC
    </select>

    <!-- 查找给定课程ID列表中已被排课的课程ID (匹配 DAO 接口中的 findScheduledCourseIds) -->
    <select id="findScheduledCourseIds" resultType="java.lang.Long">
        SELECT DISTINCT course_id
        FROM schedule
        WHERE course_id IN
        <foreach item="item" collection="courseIds" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper> 